{"ast":null,"code":"import _objectSpread from \"/home/avillan/ironhack/project/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/avillan/ironhack/project/client/src/components/auth/Login.js\";\nimport React, { Component } from 'react';\nimport Service from '../../service/Auth.service';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      let _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          [name]: value\n        })\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const _this$state$user = this.state.user,\n            username = _this$state$user.username,\n            password = _this$state$user.password;\n\n      this._service.login(username, password).then(theLoggedUser => {\n        this.props.setUser(theLoggedUser.data);\n        this.setState({\n          username: '',\n          password: ''\n        });\n        this.props.history.push('/coasters'); // REDIRECCIONAMIENTO\n      }).catch(err => {\n        this.handleToastOpen(err.response.data.message);\n      });\n    };\n\n    this.handleToastClose = () => this.setState({\n      showToast: false,\n      toastText: ''\n    });\n\n    this.handleToastOpen = text => this.setState({\n      showToast: true,\n      toastText: text\n    });\n\n    this._service = new Service();\n    this.state = {\n      showToast: false,\n      toastText: '',\n      user: {\n        username: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Iniciar sesi\\xF3n\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Usuario\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"username\",\n      onChange: this.handleInputChange,\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Contrase\\xF1a\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"password\",\n      onChange: this.handleInputChange,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"dark\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Iniciar sesi\\xF3n\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/avillan/ironhack/project/client/src/components/auth/Login.js"],"names":["React","Component","Service","LoginForm","constructor","props","handleInputChange","e","target","name","value","setState","user","state","handleSubmit","preventDefault","username","password","_service","login","then","theLoggedUser","setUser","data","history","push","catch","err","handleToastOpen","response","message","handleToastClose","showToast","toastText","text","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport Service from '../../service/Auth.service'\n\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            showToast: false,\n            toastText: '',\n            user: { username: '', password: '' }\n        }\n    }\n\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            user: { ...this.state.user, [name]: value }\n        })\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { username, password } = this.state.user\n        this._service.login(username, password)\n            .then(theLoggedUser => {\n                this.props.setUser(theLoggedUser.data)\n                this.setState({ username: '', password: '' })\n                this.props.history.push('/coasters')            // REDIRECCIONAMIENTO\n            })\n            .catch(err => {\n                this.handleToastOpen(err.response.data.message)\n            })\n    }\n\n    handleToastClose = () => this.setState({ showToast: false, toastText: '' })\n    handleToastOpen = text => this.setState({ showToast: true, toastText: text })\n\n\n    render() {\n        return (\n            <Container>\n\n                <h1>Iniciar sesión</h1>\n\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <Form.Label>Usuario</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} />\n                    </div>\n                    <div>\n                        <Form.Label>Contraseña</Form.Label>\n                        <Form.Control type=\"text\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n                    </div>\n                    <Button variant=\"dark\" type=\"submit\">Iniciar sesión</Button>\n                </form>\n\n            </Container >\n        )\n    }\n}\n\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}