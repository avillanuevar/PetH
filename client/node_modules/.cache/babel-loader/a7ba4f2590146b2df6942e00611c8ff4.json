{"ast":null,"code":"var _jsxFileName = \"/home/avillan/ironhack/project/client/src/components/coasters/Coaster-list.js\";\nimport React from 'react';\nimport Service from '../../service/Coaster.service';\nimport { Container, Row, Button, Modal } from 'react-bootstrap';\nimport CoasterCard from './Coaster-card';\nimport CoasterForm from './Coaster-form';\n\nclass CoasterList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.updateCoastersList();\n\n    this.updateCoastersList = () => {\n      this._service.getAllCoasters().then(allCoastersFromDB => this.setState({\n        coasters: allCoastersFromDB.data\n      })).catch(err => console.log(\"Error\", err));\n    };\n\n    this.handleShow = () => this.setState({\n      showModalWindow: true\n    });\n\n    this.handleClose = () => this.setState({\n      showModalWindow: false\n    });\n\n    this._service = new Service();\n    this.state = {\n      coasters: [],\n      showModalWindow: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\xCDndice de monta\\xF1as rusas\"), this.props.loggedInUser && React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.handleShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Nueva monta\\xF1a rusa\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.coasters.map(coaster => React.createElement(CoasterCard, Object.assign({\n      key: coaster._id\n    }, coaster, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))))), React.createElement(Modal, {\n      show: this.state.showModalWindow,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Nueva monta\\xF1a rusa\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CoasterForm, {\n      closeModalWindow: this.handleClose,\n      updateCoastersList: this.updateCoastersList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CoasterList;","map":{"version":3,"sources":["/home/avillan/ironhack/project/client/src/components/coasters/Coaster-list.js"],"names":["React","Service","Container","Row","Button","Modal","CoasterCard","CoasterForm","CoasterList","Component","constructor","props","componentDidMount","updateCoastersList","_service","getAllCoasters","then","allCoastersFromDB","setState","coasters","data","catch","err","console","log","handleShow","showModalWindow","handleClose","state","render","loggedInUser","map","coaster","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,iBAA9C;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,iBATmB,GASC,MAAM,KAAKC,kBAAL,EATP;;AAAA,SAWnBA,kBAXmB,GAWE,MAAM;AACvB,WAAKC,QAAL,CAAcC,cAAd,GACKC,IADL,CACUC,iBAAiB,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF,iBAAiB,CAACG;AAA9B,OAAd,CAD/B,EAEKC,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB,CAFlB;AAGH,KAfkB;;AAAA,SAiBnBG,UAjBmB,GAiBN,MAAM,KAAKP,QAAL,CAAc;AAAEQ,MAAAA,eAAe,EAAE;AAAnB,KAAd,CAjBA;;AAAA,SAkBnBC,WAlBmB,GAkBL,MAAM,KAAKT,QAAL,CAAc;AAAEQ,MAAAA,eAAe,EAAE;AAAnB,KAAd,CAlBD;;AAEf,SAAKZ,QAAL,GAAgB,IAAIb,OAAJ,EAAhB;AACA,SAAK2B,KAAL,GAAa;AACTT,MAAAA,QAAQ,EAAE,EADD;AAETO,MAAAA,eAAe,EAAE;AAFR,KAAb;AAIH;;AAaDG,EAAAA,MAAM,GAAG;AACL,WAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFJ,EAKQ,KAAKlB,KAAL,CAAWmB,YAAX,IAA2B,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,KAAKL,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALnC,EAQI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKG,KAAL,CAAWT,QAAX,CAAoBY,GAApB,CAAwBC,OAAO,IAAI,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,OAAO,CAACC;AAA1B,OAAmCD,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnC,CADL,CARJ,CAFJ,EAgBI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWF,eAAxB;AAAyC,MAAA,MAAM,EAAE,KAAKC,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CADJ,EAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,gBAAgB,EAAE,KAAKA,WAApC;AAAiD,MAAA,kBAAkB,EAAE,KAAKd,kBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CAhBJ,CAHJ;AA+BH;;AAtDqC;;AA0D1C,eAAeL,WAAf","sourcesContent":["import React from 'react'\nimport Service from '../../service/Coaster.service'\n\nimport { Container, Row, Button, Modal } from 'react-bootstrap'\n\nimport CoasterCard from './Coaster-card'\nimport CoasterForm from './Coaster-form'\n\nclass CoasterList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            coasters: [],\n            showModalWindow: false\n        }\n    }\n\n    componentDidMount = () => this.updateCoastersList()\n\n    updateCoastersList = () => {\n        this._service.getAllCoasters()\n            .then(allCoastersFromDB => this.setState({ coasters: allCoastersFromDB.data }))\n            .catch(err => console.log(\"Error\", err))\n    }\n\n    handleShow = () => this.setState({ showModalWindow: true })\n    handleClose = () => this.setState({ showModalWindow: false })\n\n    render() {\n        return (\n\n\n            <section>\n\n                <Container>\n\n                    <h1>Índice de montañas rusas</h1>\n\n                    {\n                        this.props.loggedInUser && <Button variant=\"dark\" onClick={this.handleShow}>Nueva montaña rusa</Button>\n                    }\n\n                    <Row>\n                        {this.state.coasters.map(coaster => <CoasterCard key={coaster._id} {...coaster} />)}\n                    </Row>\n                </Container>\n\n\n                <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Nueva montaña rusa</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <CoasterForm closeModalWindow={this.handleClose} updateCoastersList={this.updateCoastersList} />\n                    </Modal.Body>\n                </Modal>\n\n            </section>\n\n        )\n    }\n}\n\n\nexport default CoasterList"]},"metadata":{},"sourceType":"module"}